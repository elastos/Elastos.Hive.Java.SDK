apply plugin: 'java-library'
apply plugin: 'com.novoda.bintray-release'

repositories {
    jcenter()
    mavenCentral()
}

buildscript {
    repositories {
        maven {
            url uri("$rootDir/repo")
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.novoda:bintray-release:0.9.1'
    }
}

version = 'v2.0.4'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    compile 'org.jetbrains:annotations:17.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.9'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.json:json:20160212'
    implementation 'org.nanohttpd:nanohttpd:2.3.1'

    implementation 'com.google.guava:guava:26.0-jre'
    implementation 'org.antlr:antlr4-runtime:4.7.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.9'
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.0'
    implementation 'org.slf4j:slf4j-api:1.7.30'

    implementation 'org.elastos.did:didsdk:2.0.0-pre'


    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.slf4j:slf4j-jdk14:1.7.30'

    testRuntime 'org.junit.jupiter:junit-jupiter:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.7.0'
 
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

task createjavadoc(type: Javadoc) {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/8/docs/api"
    }
    include(
            //org.elastos.hive
            "**/Client.java",
            "**/SdkVersion.java",
            "**/Vault.java",

            //interface
            "**/Database.java",
            "**/Files.java",
            "**/ApplicationContext.java",
            "**/Payment.java",
            "**/Scripting.java",
            "**/Version.java",

            //org.elastos.hive.database
            "**/Collation.java",
            "**/CountOptions.java",
            "**/CreateCollectionOptions.java",
            "**/Date.java",
            "**/DeleteOptions.java",
            "**/DeleteResult.java",
            "**/FindOptions.java",
            "**/Index.java",
            "**/InsertManyResult.java",
            "**/InsertOneResult.java",
            "**/InsertOptions.java",
            "**/MaxKey.java",
            "**/MinKey.java",
            "**/ObjectId.java",
            "**/Options.java",
            "**/ReadConcern.java",
            "**/ReadPreference.java",
            "**/RegularExpression.java",
            "**/Timestamp.java",
            "**/UpdateOptions.java",
            "**/UpdateResult.java",
            "**/WriteConcern.java",

            //org.elastos.hive.file
            "**/FileInfo.java",
            "**/UploadOutputStream.java",

            //org.elastos.hive.scripting
            "**/AggregatedCondition.java",
            "**/AggregatedExecutable.java",
            "**/AndCondition.java",
            "**/Condition.java",
            "**/DbDeleteQuery.java",
            "**/DbFindQuery.java",
            "**/DbInsertQuery.java",
            "**/DbUpdateQuery.java",
            "**/DownloadExecutable.java",
            "**/FileExecutable.java",
            "**/HashExecutable.java",
            "**/Executable.java",
            "**/OrCondition.java",
            "**/QueryHasResultsCondition.java",
            "**/RawCondition.java",
            "**/RawExecutable.java",
            "**/UploadExecutable.java",

            //org.elastos.hive.payment
            "**/Order",
            "**/PricingInfo",
            "**/PricingPlan",
            "**/UsingPlan",

            //org.elastos.hive.exception
            "**/HiveException.java",
            "**/FileNotFoundException.java",
            "**/UnsupportFileTypeException.java",
            "**/VaultAlreadyExistException.java",
    )
    source = sourceSets.main.java.srcDirs
    destinationDir = file("doc/")
    failOnError false
}

javadoc.dependsOn(build)

test {
    useJUnitPlatform()

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

publish {
    userOrg = 'elastos'
    groupId = 'org.elastos'
    artifactId = 'hive'
    publishVersion = version
    desc = 'Elastos Hive SDK'
    repoName = 'Elastos.NET.Hive.Java.SDK'
    website = 'https://github.com/elastos/Elastos.NET.Hive.Java.SDK'
}
